/*!
 * vue-easy-tinymce v1.0.2
 * Copyright (c) 2018-present Mehdi Esmaeili (@m3esma)
 * Released under the MIT License.
 * Project: https://github.com/m3esma/vue-easy-tinymce
 */
var VueEasyTinyMCE = {
    props: {
        id: {type: String, default: "editor"},
        value: {default: ""},
        toolbar1: {default: ""},
        toolbar2: {default: ""},
        plugins: {
            default: function () {
                return []
            }, type: Array
        },
        other: {
            default: function () {
                return {}
            }, type: Object
        }
    }, data: function () {
        return {objTinymce: null}
    }, template: '<textarea :id="computedId" :value="value"></textarea>', computed: {
        computedId: function () {
            return "editor" === this.id || "" === this.id || null === this.id ? "editor-" + this.guidGenerator() : this.id
        }
    }, mounted: function () {
        var t = this, e = {
            target: this.$el,
            toolbar1: this.toolbar1 || 'insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image media',
      toolbar2: this.toolbar2,
      plugins: this.plugins.length > 0 ? this.plugins : [
        'advlist autolink lists link image charmap print preview anchor',
        'searchreplace visualblocks code fullscreen',
        'insertdatetime media table paste code help wordcount',
      ],
            media_live_embeds: true, // ADD:
            extended_valid_elements: 'iframe[src|title|tframeborder|style|scrolling|class|width|height|name|align]', // ADD:
            init_instance_callback: function (e) {
                e.on("Change KeyUp Undo Redo", function (n) {
                    t.updateValue(e.getContent())
                }), t.objTinymce = e
            }
        }, n = Object.assign({}, e, this.other);
        tinymce.init(n)
    }, methods: {
        guidGenerator: function () {
            function t() {
                return Math.floor(65536 * (1 + Math.random())).toString(16).substring(1)
            }

            return t() + t() + "-" + t() + "-" + t() + "-" + t() + "-" + t() + t() + t()
        }, updateValue: function (t) {
            this.$emit("input", t)
        }
    }, watch: {
        value: function (t, e) {

            if(this.objTinymce !== null) {
                this.value !== this.objTinymce.getContent() && this.objTinymce.setContent(this.value)
            }
        }
    }
};
"undefined" != typeof module && module.exports && (module.exports = VueEasyTinyMCE);